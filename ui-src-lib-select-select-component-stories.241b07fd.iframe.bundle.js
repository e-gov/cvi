"use strict";(self.webpackChunkcvi_components=self.webpackChunkcvi_components||[]).push([[9304],{"./libs/ui/src/lib/select/select.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,DisabledBackground:()=>DisabledBackground,Form:()=>Form,LoadingState:()=>LoadingState,ObjectsAsItems:()=>ObjectsAsItems,SortedItems:()=>SortedItems,UserCanAddItems:()=>UserCanAddItems,WithBoundValues:()=>WithBoundValues,WithCustomValueFormatting:()=>WithCustomValueFormatting,__namedExportsOrder:()=>__namedExportsOrder,default:()=>select_component_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),ui_module=__webpack_require__("./libs/ui/src/lib/ui.module.ts");const select_component_stories={title:"Angular/Form/Select",decorators:[(0,dist.moduleMetadata)({imports:[ui_module.e,fesm2022_forms.sl]})],parameters:{docs:{description:{component:"## General description\n\n| Feature                    | Description       |\n|----------------------------|-------------------|\n| Selector                   | `cvi-ng-select` |\n| Component name             | `SelectComponent` |\n| Content                    | no                |\n| Permitted parent/ancestors | any               |\n| Permitted children         | -                 |\n\n## Where to use\n\nDisplays a select component where you can search element\n"}}},argTypes:{itemChanged:{action:"Item changed!"},containerWidth:{name:"Container width",table:{category:"Playground"},control:{type:"number"}}},args:{items:["City of Sierra Nevada 1","City of Bilbao 2","valik 3 (cy test)","Rest queen discovery stood far everything keep aside merely girl two making inch hard example remove steel right silent trunk central refused other 4","City of London 5","Option 6 with enough text to feed a saltwater crocodile","Option 7 with enough text to feed a prehistoric jaguar"],placeholder:"Otsi elementi",disabled:!1,backgroundDisabled:!1,minTermLength:0,htmlId:"some-select",labelId:"some-select-label",loading:!1,sortItemsFn:void 0,valueFormatFn:null,addItemFn:void 0,addItemLabel:"",searchFn:null,bindLabel:"",bindValue:"",loadingLabel:"Loading...",containerWidth:220}},Default={render:args=>({props:args,template:'\n      <div [ngStyle]="{\'width.px\': containerWidth}">\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId" [labelId]="labelId">\n          <cvi-ng-select [items]="items"\n                         (itemChanged)="itemChanged($event)"\n                         [disabled]="disabled"\n                         [sortItemsFn]="sortItemsFn"\n                         [searchFn]="searchFn"\n                         [addItemLabel]="addItemLabel"\n                         [addItemFn]="addItemFn"\n                         [valueFormatFn]="valueFormatFn"\n                         [minTermLength]="minTermLength"\n                         [bindLabel]="bindLabel"\n                         [bindValue]="bindValue"\n                         [labelId]="labelId"\n                         [loading]="loading"\n                         [loadingLabel]="loadingLabel"\n                         [backgroundDisabled]="backgroundDisabled"\n                         [placeholder]="placeholder"\n                         [htmlId]="htmlId"></cvi-ng-select>\n        </cvi-ng-form-item>\n      </div>\n    '})},Disabled={...Default,args:{disabled:!0}},DisabledBackground={...Default,args:{backgroundDisabled:!0}},LoadingState={...Default,args:{loading:!0}},WithCustomValueFormatting={render:args=>({props:args,template:'\n      <div [ngStyle]="{\'width.px\': containerWidth}">\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId" [labelId]="labelId">\n          <cvi-ng-select [items]="items"\n                         (itemChanged)="itemChanged($event)"\n                         [disabled]="disabled"\n                         [addItemLabel]="addItemLabel"\n                         [sortItemsFn]="sortItemsFn"\n                         [addItemFn]="addItemFn"\n                         [searchFn]="searchFn"\n                         [valueFormatFn]="valueFormatFn"\n                         [minTermLength]="minTermLength"\n                         [bindLabel]="bindLabel"\n                         [bindValue]="bindValue"\n                         [labelId]="labelId"\n                         [loading]="loading"\n                         [loadingLabel]="loadingLabel"\n                         [backgroundDisabled]="backgroundDisabled"\n                         [placeholder]="placeholder"\n                         [htmlId]="htmlId">\n            <ng-template cviNgSelectOptionTemplate let-item="item">\n              <cvi-ng-track verticalAlignment="center" [gap]="4">\n                <ng-container *ngTemplateOutlet="icon"></ng-container>\n                {{ item }}\n              </cvi-ng-track>\n            </ng-template>\n            <ng-template cviNgSelectLabelTemplate let-item="item">\n              <cvi-ng-track verticalAlignment="center" [gap]="4">\n                <ng-container *ngTemplateOutlet="icon"></ng-container>\n                {{ item }}\n              </cvi-ng-track>\n            </ng-template>\n          </cvi-ng-select>\n        </cvi-ng-form-item>\n      </div>\n      <ng-template #icon>\n        <svg xmlns="http://www.w3.org/2000/svg" width="10" height="6" style="flex: 0 0 auto"><path fill="#0072CE" d="M0,0h9.3v5.9H0V0z"/><path d="M0,2h9.3v4H0V2z"/><path fill="#ffffff" d="M0,4h9.3v2H0V4z" /></svg>\n      </ng-template>\n    '})},UserCanAddItems={render:args=>({props:{...args,addItemFn:text=>"Added by YOU: "+text},template:'\n      <div [ngStyle]="{\'width.px\': containerWidth}">\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId" [labelId]="labelId">\n          <cvi-ng-select [items]="items"\n                         (itemChanged)="itemChanged($event)"\n                         [disabled]="disabled"\n                         [addItemLabel]="addItemLabel"\n                         [sortItemsFn]="sortItemsFn"\n                         [addItemFn]="addItemFn"\n                         [searchFn]="searchFn"\n                         [valueFormatFn]="valueFormatFn"\n                         [minTermLength]="minTermLength"\n                         [bindLabel]="bindLabel"\n                         [bindValue]="bindValue"\n                         [labelId]="labelId"\n                         [loading]="loading"\n                         [loadingLabel]="loadingLabel"\n                         [backgroundDisabled]="backgroundDisabled"\n                         [placeholder]="placeholder"\n                         [htmlId]="htmlId"></cvi-ng-select>\n        </cvi-ng-form-item>\n      </div>\n    '}),args:{placeholder:"Otsi elementi vÃµi lisa uus",addItemLabel:"Lisa element"}},ObjectsAsItems={render:args=>({props:{...args,searchFn:(term,item)=>(console.log("custom searchFn works!"),`${item.name} (${item.code})`.toLowerCase().indexOf(term.toLowerCase())>-1),valueFormatFn:item=>`${item.name} (${item.code})`},template:'\n      <cvi-ng-storybook-note>\n        Use this approach when you provide objects as items and need to mix and match different properties of an item object in an option template. In addition to templates, you need to supply <code>valueFormatFn</code> input as well, in order for the chosen value to appear correctly.\n      </cvi-ng-storybook-note>\n      <div [ngStyle]="{\'width.px\': containerWidth}">\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId" [labelId]="labelId">\n          <cvi-ng-select [items]="items"\n                         (itemChanged)="itemChanged($event)"\n                         [disabled]="disabled"\n                         [addItemLabel]="addItemLabel"\n                         [sortItemsFn]="sortItemsFn"\n                         [addItemFn]="addItemFn"\n                         [searchFn]="searchFn"\n                         [valueFormatFn]="valueFormatFn"\n                         [minTermLength]="minTermLength"\n                         [bindLabel]="bindLabel"\n                         [bindValue]="bindValue"\n                         [labelId]="labelId"\n                         [loading]="loading"\n                         [loadingLabel]="loadingLabel"\n                         [backgroundDisabled]="backgroundDisabled"\n                         [placeholder]="placeholder"\n                         [htmlId]="htmlId">\n            <ng-template cviNgSelectOptionTemplate let-item="item">\n              {{ item.name }} ({{ item.code }})\n            </ng-template>\n            <ng-template cviNgSelectLabelTemplate let-item="item">\n              {{ item.name }} ({{ item.code }})\n            </ng-template>\n          </cvi-ng-select>\n        </cvi-ng-form-item>\n      </div>\n    '}),args:{items:[{code:"123",name:"Product 1"},{code:"222",name:"Product 2"}]}},WithBoundValues={render:args=>{const form=new fesm2022_forms.WC({item:new fesm2022_forms.Ku(null,fesm2022_forms.AQ.required)});return{props:{...args,form,selectedValue:function selectedValue(){return form.getRawValue().item},onSubmit:function onSubmit(formValue){console.log(formValue)}},template:'\n      <cvi-ng-storybook-note>\n        Use <code>bindValue</code> and <code>bindLabel</code> inputs if you need to use custom item object properties, but don\'t want to supply fancy templates for option or selected value.\n      </cvi-ng-storybook-note>\n      <form [ngStyle]="{\'width.px\': containerWidth}" [formGroup]="form" (ngSubmit)="onSubmit(this.form.value)">\n        <div [ngStyle]="{\'width.px\': containerWidth}">\n          <cvi-ng-form-item label="Some label" [htmlId]="htmlId" [labelId]="labelId">\n            <cvi-ng-select [items]="items"\n                           [placeholder]="placeholder"\n                           [htmlId]="htmlId"\n                           [labelId]="labelId"\n                           formControlName="item"\n                           bindLabel="fancyLabel"\n                           bindValue="rawValue">\n            </cvi-ng-select>\n          </cvi-ng-form-item>\n        </div>\n      </form>\n      <div>Selected value: {{selectedValue()}}</div>\n    '}},args:{items:[{fancyLabel:"Scrooge McDuck",rawValue:"duck1"},{fancyLabel:"Donald Duck",rawValue:"duck2"}]}},Form={render:args=>{const form=new fesm2022_forms.WC({item:new fesm2022_forms.Ku(null,fesm2022_forms.AQ.required)});return{props:{...args,form,selectedValue:function selectedValue(){return form.getRawValue().item},onSubmit:function onSubmit(formValue){console.log(formValue)}},template:'\n      <form [ngStyle]="{\'width.px\': containerWidth}" [formGroup]="form" (ngSubmit)="onSubmit(this.form.value)">\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId" [labelId]="labelId">\n          <cvi-ng-select [items]="items"\n                         (itemChanged)="itemChanged($event)"\n                         [disabled]="disabled"\n                         [addItemLabel]="addItemLabel"\n                         [sortItemsFn]="sortItemsFn"\n                         [addItemFn]="addItemFn"\n                         [searchFn]="searchFn"\n                         [valueFormatFn]="valueFormatFn"\n                         [minTermLength]="minTermLength"\n                         [bindLabel]="bindLabel"\n                         [bindValue]="bindValue"\n                         [labelId]="labelId"\n                         [loading]="loading"\n                         [loadingLabel]="loadingLabel"\n                         [backgroundDisabled]="backgroundDisabled"\n                         [placeholder]="placeholder"\n                         [htmlId]="htmlId"\n                         formControlName="item"></cvi-ng-select>\n        </cvi-ng-form-item>\n        <div>Selected value: {{selectedValue()}}</div>\n      </form>\n    '}}},SortedItems={render:args=>({props:{...args,sortItemsFn:(a,b)=>a.localeCompare(b,"et")},template:'\n      <div [ngStyle]="{\'width.px\': containerWidth}">\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId">\n          <cvi-ng-select [items]="items"\n                         (itemChanged)="itemChanged($event)"\n                         [disabled]="disabled"\n                         [addItemLabel]="addItemLabel"\n                         [sortItemsFn]="sortItemsFn"\n                         [addItemFn]="addItemFn"\n                         [searchFn]="searchFn"\n                         [valueFormatFn]="valueFormatFn"\n                         [minTermLength]="minTermLength"\n                         [bindLabel]="bindLabel"\n                         [bindValue]="bindValue"\n                         [labelId]="labelId"\n                         [loading]="loading"\n                         [loadingLabel]="loadingLabel"\n                         [backgroundDisabled]="backgroundDisabled"\n                         [placeholder]="placeholder"\n                         [htmlId]="htmlId"></cvi-ng-select>\n        </cvi-ng-form-item>\n      </div>\n    '}),args:{items:["ÃÃÃ","DDD","CCC","AAA","BBB"]}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: (args: SelectComponent) => ({\n    props: args,\n    /* template */\n    template: `\n      <div [ngStyle]="{\'width.px\': containerWidth}">\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId" [labelId]="labelId">\n          <cvi-ng-select [items]="items"\n                         (itemChanged)="itemChanged($event)"\n                         [disabled]="disabled"\n                         [sortItemsFn]="sortItemsFn"\n                         [searchFn]="searchFn"\n                         [addItemLabel]="addItemLabel"\n                         [addItemFn]="addItemFn"\n                         [valueFormatFn]="valueFormatFn"\n                         [minTermLength]="minTermLength"\n                         [bindLabel]="bindLabel"\n                         [bindValue]="bindValue"\n                         [labelId]="labelId"\n                         [loading]="loading"\n                         [loadingLabel]="loadingLabel"\n                         [backgroundDisabled]="backgroundDisabled"\n                         [placeholder]="placeholder"\n                         [htmlId]="htmlId"></cvi-ng-select>\n        </cvi-ng-form-item>\n      </div>\n    `\n  })\n}',...Default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}},DisabledBackground.parameters={...DisabledBackground.parameters,docs:{...DisabledBackground.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    backgroundDisabled: true\n  }\n}",...DisabledBackground.parameters?.docs?.source}}},LoadingState.parameters={...LoadingState.parameters,docs:{...LoadingState.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    loading: true\n  }\n}",...LoadingState.parameters?.docs?.source}}},WithCustomValueFormatting.parameters={...WithCustomValueFormatting.parameters,docs:{...WithCustomValueFormatting.parameters?.docs,source:{originalSource:'{\n  render: (args: SelectComponent) => ({\n    props: args,\n    /* template */\n    template: `\n      <div [ngStyle]="{\'width.px\': containerWidth}">\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId" [labelId]="labelId">\n          <cvi-ng-select [items]="items"\n                         (itemChanged)="itemChanged($event)"\n                         [disabled]="disabled"\n                         [addItemLabel]="addItemLabel"\n                         [sortItemsFn]="sortItemsFn"\n                         [addItemFn]="addItemFn"\n                         [searchFn]="searchFn"\n                         [valueFormatFn]="valueFormatFn"\n                         [minTermLength]="minTermLength"\n                         [bindLabel]="bindLabel"\n                         [bindValue]="bindValue"\n                         [labelId]="labelId"\n                         [loading]="loading"\n                         [loadingLabel]="loadingLabel"\n                         [backgroundDisabled]="backgroundDisabled"\n                         [placeholder]="placeholder"\n                         [htmlId]="htmlId">\n            <ng-template cviNgSelectOptionTemplate let-item="item">\n              <cvi-ng-track verticalAlignment="center" [gap]="4">\n                <ng-container *ngTemplateOutlet="icon"></ng-container>\n                {{ item }}\n              </cvi-ng-track>\n            </ng-template>\n            <ng-template cviNgSelectLabelTemplate let-item="item">\n              <cvi-ng-track verticalAlignment="center" [gap]="4">\n                <ng-container *ngTemplateOutlet="icon"></ng-container>\n                {{ item }}\n              </cvi-ng-track>\n            </ng-template>\n          </cvi-ng-select>\n        </cvi-ng-form-item>\n      </div>\n      <ng-template #icon>\n        <svg xmlns="http://www.w3.org/2000/svg" width="10" height="6" style="flex: 0 0 auto"><path fill="#0072CE" d="M0,0h9.3v5.9H0V0z"/><path d="M0,2h9.3v4H0V2z"/><path fill="#ffffff" d="M0,4h9.3v2H0V4z" /></svg>\n      </ng-template>\n    `\n  })\n}',...WithCustomValueFormatting.parameters?.docs?.source}}},UserCanAddItems.parameters={...UserCanAddItems.parameters,docs:{...UserCanAddItems.parameters?.docs,source:{originalSource:'{\n  render: (args: SelectComponent) => ({\n    props: {\n      ...args,\n      addItemFn: (text: string) => {\n        return \'Added by YOU: \' + text;\n      }\n    },\n    /* template */\n    template: `\n      <div [ngStyle]="{\'width.px\': containerWidth}">\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId" [labelId]="labelId">\n          <cvi-ng-select [items]="items"\n                         (itemChanged)="itemChanged($event)"\n                         [disabled]="disabled"\n                         [addItemLabel]="addItemLabel"\n                         [sortItemsFn]="sortItemsFn"\n                         [addItemFn]="addItemFn"\n                         [searchFn]="searchFn"\n                         [valueFormatFn]="valueFormatFn"\n                         [minTermLength]="minTermLength"\n                         [bindLabel]="bindLabel"\n                         [bindValue]="bindValue"\n                         [labelId]="labelId"\n                         [loading]="loading"\n                         [loadingLabel]="loadingLabel"\n                         [backgroundDisabled]="backgroundDisabled"\n                         [placeholder]="placeholder"\n                         [htmlId]="htmlId"></cvi-ng-select>\n        </cvi-ng-form-item>\n      </div>\n    `\n  }),\n  args: {\n    placeholder: \'Otsi elementi vÃµi lisa uus\',\n    addItemLabel: \'Lisa element\'\n  }\n}',...UserCanAddItems.parameters?.docs?.source}}},ObjectsAsItems.parameters={...ObjectsAsItems.parameters,docs:{...ObjectsAsItems.parameters?.docs,source:{originalSource:'{\n  render: (args: SelectComponent) => ({\n    props: {\n      ...args,\n      searchFn: (term: string, item: {\n        name: string;\n        code: string;\n      }) => {\n        console.log(\'custom searchFn works!\');\n        return `${item.name} (${item.code})`.toLowerCase().indexOf(term.toLowerCase()) > -1;\n      },\n      valueFormatFn: (item: {\n        name: string;\n        code: string;\n      }) => `${item.name} (${item.code})`\n    },\n    /* template */\n    template: `\n      <cvi-ng-storybook-note>\n        Use this approach when you provide objects as items and need to mix and match different properties of an item object in an option template. In addition to templates, you need to supply <code>valueFormatFn</code> input as well, in order for the chosen value to appear correctly.\n      </cvi-ng-storybook-note>\n      <div [ngStyle]="{\'width.px\': containerWidth}">\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId" [labelId]="labelId">\n          <cvi-ng-select [items]="items"\n                         (itemChanged)="itemChanged($event)"\n                         [disabled]="disabled"\n                         [addItemLabel]="addItemLabel"\n                         [sortItemsFn]="sortItemsFn"\n                         [addItemFn]="addItemFn"\n                         [searchFn]="searchFn"\n                         [valueFormatFn]="valueFormatFn"\n                         [minTermLength]="minTermLength"\n                         [bindLabel]="bindLabel"\n                         [bindValue]="bindValue"\n                         [labelId]="labelId"\n                         [loading]="loading"\n                         [loadingLabel]="loadingLabel"\n                         [backgroundDisabled]="backgroundDisabled"\n                         [placeholder]="placeholder"\n                         [htmlId]="htmlId">\n            <ng-template cviNgSelectOptionTemplate let-item="item">\n              {{ item.name }} ({{ item.code }})\n            </ng-template>\n            <ng-template cviNgSelectLabelTemplate let-item="item">\n              {{ item.name }} ({{ item.code }})\n            </ng-template>\n          </cvi-ng-select>\n        </cvi-ng-form-item>\n      </div>\n    `\n  }),\n  args: {\n    items: [{\n      code: \'123\',\n      name: \'Product 1\'\n    }, {\n      code: \'222\',\n      name: \'Product 2\'\n    }]\n  }\n}',...ObjectsAsItems.parameters?.docs?.source}}},WithBoundValues.parameters={...WithBoundValues.parameters,docs:{...WithBoundValues.parameters?.docs,source:{originalSource:"{\n  render: WithBoundValuesTemplate,\n  args: {\n    items: [{\n      fancyLabel: 'Scrooge McDuck',\n      rawValue: 'duck1'\n    }, {\n      fancyLabel: 'Donald Duck',\n      rawValue: 'duck2'\n    }]\n  }\n}",...WithBoundValues.parameters?.docs?.source}}},Form.parameters={...Form.parameters,docs:{...Form.parameters?.docs,source:{originalSource:"{\n  render: FormTemplate\n}",...Form.parameters?.docs?.source}}},SortedItems.parameters={...SortedItems.parameters,docs:{...SortedItems.parameters?.docs,source:{originalSource:'{\n  render: (args: SelectComponent) => ({\n    props: {\n      ...args,\n      sortItemsFn: (a: string, b: string): number => {\n        return a.localeCompare(b, \'et\');\n      }\n    },\n    /* template */\n    template: `\n      <div [ngStyle]="{\'width.px\': containerWidth}">\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId">\n          <cvi-ng-select [items]="items"\n                         (itemChanged)="itemChanged($event)"\n                         [disabled]="disabled"\n                         [addItemLabel]="addItemLabel"\n                         [sortItemsFn]="sortItemsFn"\n                         [addItemFn]="addItemFn"\n                         [searchFn]="searchFn"\n                         [valueFormatFn]="valueFormatFn"\n                         [minTermLength]="minTermLength"\n                         [bindLabel]="bindLabel"\n                         [bindValue]="bindValue"\n                         [labelId]="labelId"\n                         [loading]="loading"\n                         [loadingLabel]="loadingLabel"\n                         [backgroundDisabled]="backgroundDisabled"\n                         [placeholder]="placeholder"\n                         [htmlId]="htmlId"></cvi-ng-select>\n        </cvi-ng-form-item>\n      </div>\n    `\n  }),\n  args: {\n    items: [\'ÃÃÃ\', \'DDD\', \'CCC\', \'AAA\', \'BBB\']\n  }\n}',...SortedItems.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Disabled","DisabledBackground","LoadingState","WithCustomValueFormatting","UserCanAddItems","ObjectsAsItems","WithBoundValues","Form","SortedItems"]}}]);