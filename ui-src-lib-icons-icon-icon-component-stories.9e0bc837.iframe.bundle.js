"use strict";(self.webpackChunkcvi_components=self.webpackChunkcvi_components||[]).push([[8660],{"./libs/ui/src/lib/icons/icon/icon.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithCustomSize:()=>WithCustomSize,WithStyling:()=>WithStyling,__namedExportsOrder:()=>__namedExportsOrder,default:()=>icon_component_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),icon_component=__webpack_require__("./libs/ui/src/lib/icons/icon/icon.component.ts");var storybook_icons=__webpack_require__("./libs/ui/src/lib/icons/storybook-icons.ts"),icon=__webpack_require__("./libs/ui/src/lib/icons/icon/icon.ts");const icon_component_stories={title:"Angular/Icon",component:icon_component.g,parameters:{docs:{description:{component:"## General description\n\n| Feature                    | Description     |\n|----------------------------|-----------------|\n| Selector                   | `cvi-ng-icon`   |\n| Component name             | `IconComponent` |\n| Content                    | no              |\n| Permitted parent/ancestors | any             |\n| Permitted children         | -               |\n\n## Where to use\n\nDisplays a regular svg icon.\n\nPlease remember to register the icon via `IconsRegistry` in your app.\n"}}},argTypes:{name:{name:"Name",options:storybook_icons.W,control:{type:"select"}}},args:{name:"action",height:icon.c}},Default={},WithCustomSize={...Default,args:{height:140},parameters:{layout:"padded"},decorators:[(0,dist.componentWrapperDecorator)((story=>`\n        <cvi-ng-storybook-note>\n          To change size of an icon (in both dimensions), set its <code>height</code> prop. The icon will be resized proportionally.\n        </cvi-ng-storybook-note>\n        ${story}\n      `))]},WithStyling={render:args=>({props:args,styles:[".wrapper-class {\n        fill: red;\n      }"]}),decorators:[(0,dist.componentWrapperDecorator)((story=>`\n        <cvi-ng-storybook-note>\n          To change color of an icon, just add <code>fill</code> CSS property either to icon component selector itself or its ancestor. It is not required to apply <code>fill</code> to SVG node itself.\n        </cvi-ng-storybook-note>\n        <div class="wrapper-class">\n          ${story}\n        </div>\n      `))],parameters:{layout:"padded"}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},WithCustomSize.parameters={...WithCustomSize.parameters,docs:{...WithCustomSize.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    height: 140\n  },\n  parameters: {\n    layout: 'padded'\n  },\n  decorators: [componentWrapperDecorator(story => {\n    return `\n        <cvi-ng-storybook-note>\n          To change size of an icon (in both dimensions), set its <code>height</code> prop. The icon will be resized proportionally.\n        </cvi-ng-storybook-note>\n        ${story}\n      `;\n  })]\n}",...WithCustomSize.parameters?.docs?.source}}},WithStyling.parameters={...WithStyling.parameters,docs:{...WithStyling.parameters?.docs,source:{originalSource:"{\n  render: (args: IconComponent) => ({\n    props: args,\n    styles: [`.wrapper-class {\n        fill: red;\n      }`]\n  }),\n  decorators: [componentWrapperDecorator(story => {\n    return `\n        <cvi-ng-storybook-note>\n          To change color of an icon, just add <code>fill</code> CSS property either to icon component selector itself or its ancestor. It is not required to apply <code>fill</code> to SVG node itself.\n        </cvi-ng-storybook-note>\n        <div class=\"wrapper-class\">\n          ${story}\n        </div>\n      `;\n  })],\n  parameters: {\n    layout: 'padded'\n  }\n}",...WithStyling.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithCustomSize","WithStyling"]}}]);