"use strict";(self.webpackChunkcvi_components=self.webpackChunkcvi_components||[]).push([[4488],{"./libs/ui/src/lib/track/track.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,FormItems:()=>FormItems,ItemsCenteredHorizontally:()=>ItemsCenteredHorizontally,ItemsCenteredVertically:()=>ItemsCenteredVertically,Multiline:()=>Multiline,NestedTracks:()=>NestedTracks,Vertical:()=>Vertical,VerticalMobileOnly:()=>VerticalMobileOnly,VerticalMobileOnlyMobile:()=>VerticalMobileOnlyMobile,VerticalReverseMobileOnly:()=>VerticalReverseMobileOnly,VerticalReverseMobileOnlyMobile:()=>VerticalReverseMobileOnlyMobile,WithCustomGap:()=>WithCustomGap,WithEqualSizeFormItemsFlexRow:()=>WithEqualSizeFormItemsFlexRow,WithEqualSizeFormItemsGridCol:()=>WithEqualSizeFormItemsGridCol,WithEqualSizeFormItemsGridRow:()=>WithEqualSizeFormItemsGridRow,WithFormItemsComplex:()=>WithFormItemsComplex,WithGridLayout:()=>WithGridLayout,__namedExportsOrder:()=>__namedExportsOrder,default:()=>track_component_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),track_component=__webpack_require__("./libs/ui/src/lib/track/track.component.ts");const wrapperDecorators=[(0,dist.componentWrapperDecorator)(track_component.s,(({args})=>args))],categoryFlex={table:{category:"Inputs (flex only)"}},track_component_stories={title:"Angular/Track/Stories",component:track_component.s,parameters:{docs:{description:{component:"## General description\n\nFeature | Description\n- | -\nSelector | `cvi-ng-track`\nComponent name | `TrackComponent`\nDesign system module | -\nContent | yes\nPermitted parent/ancestors | any\nPermitted children | any\n\n## Where to use\n\nA a quick layout helper. Use with multiple children to provide a flex- or grid-like layout and ensure gaps between them are consistent with the design system.\n"}},layout:"padded"},argTypes:{gap:{name:"Gap",control:{type:"range",min:0,max:20,step:1}},horizontalAlignment:{name:"Horizontal alignment",options:["normal","left","center","right","justify"],control:{type:"inline-radio"},if:{arg:"flexDirection",eq:"horizontal"}},verticalAlignment:{name:"Vertical alignment",options:["normal","top","center","bottom"],control:{type:"inline-radio"},if:{arg:"flexDirection",eq:"horizontal"}},flexDirection:{name:"Direction",options:["horizontal","vertical","verticalOnMobile","verticalReverseOnMobile"],control:{type:"inline-radio"},...categoryFlex},layout:{name:"Layout method",options:["flex","grid"],control:{type:"inline-radio"}},flexIsMultiline:{name:"Is multiline",control:{type:"boolean"},if:{arg:"flexDirection",eq:"horizontal"},...categoryFlex},flexColumnsEqual:{name:"Items have equal width",if:{arg:"flexDirection",eq:"horizontal"},...categoryFlex},gridRows:{name:"Grid rows",control:{type:"number",min:1,max:20,step:1},table:{category:"Inputs (grid only)"}}},args:{gap:1,horizontalAlignment:"normal",verticalAlignment:"normal",flexDirection:"horizontal",layout:"flex",flexIsMultiline:!1,flexColumnsEqual:!1,gridRows:void 0}},Default={render:args=>({props:args,template:'\n      <cvi-ng-button appearance="secondary">Cancel</cvi-ng-button>\n      <cvi-ng-button>Submit</cvi-ng-button>\n    '}),decorators:wrapperDecorators},WithCustomGap={...Default,args:{gap:4}},ItemsCenteredHorizontally={...Default,args:{horizontalAlignment:"center"}},ItemsCenteredVertically={...Default,args:{verticalAlignment:"center"}},Vertical={...Default,args:{flexDirection:"vertical"}},VerticalMobileOnly={...Default,name:"Vertical only on mobile (desktop)",args:{flexDirection:"verticalOnMobile"}},VerticalMobileOnlyMobile={...Default,name:"Vertical only on mobile (mobile)",args:{flexDirection:"verticalOnMobile"},parameters:{viewport:{defaultViewport:"iphone12mini"}}},VerticalReverseMobileOnly={...Default,name:"Vertical reversed only on mobile (desktop)",args:{flexDirection:"verticalReverseOnMobile"}},VerticalReverseMobileOnlyMobile={...Default,name:"Vertical reversed only on mobile (mobile)",args:{flexDirection:"verticalReverseOnMobile"},parameters:{viewport:{defaultViewport:"iphone12mini"}}},Multiline={render:args=>({props:args,template:"\n      <cvi-ng-button>Button 1</cvi-ng-button>\n      <cvi-ng-button>Button with another label</cvi-ng-button>\n      <cvi-ng-button>Button 3</cvi-ng-button>\n      <cvi-ng-button>Button 4</cvi-ng-button>\n      <cvi-ng-button>Button the Fifth</cvi-ng-button>\n      <cvi-ng-button>Button of the Lucky Scrambler</cvi-ng-button>\n      <cvi-ng-button>Button numero Seven</cvi-ng-button>\n      <cvi-ng-button>Button 8</cvi-ng-button>\n      <cvi-ng-button>Button 9</cvi-ng-button>\n    "}),decorators:wrapperDecorators,args:{flexIsMultiline:!0}},FormItems={render:args=>({props:args,template:'\n      <cvi-ng-form-item label="Some stuff 1" htmlId="someid">\n        <cvi-ng-input htmlId="someid"></cvi-ng-input>\n      </cvi-ng-form-item>\n      <cvi-ng-form-item label="Some other points to make including this 2" htmlId="someid2">\n        <cvi-ng-input htmlId="someid2"></cvi-ng-input>\n      </cvi-ng-form-item>\n      <cvi-ng-form-item label="A third field 3" htmlId="someid3">\n        <cvi-ng-input htmlId="someid3"></cvi-ng-input>\n      </cvi-ng-form-item>\n      <cvi-ng-form-item label="Another field number four" htmlId="someid4">\n        <cvi-ng-input htmlId="someid4"></cvi-ng-input>\n      </cvi-ng-form-item>\n    '}),decorators:wrapperDecorators,name:"With flex layout",args:{flexIsMultiline:!0}},WithGridLayout={...Multiline,args:{layout:"grid"}},WithEqualSizeFormItemsFlexRow={...FormItems,name:"With equally sized flex items",args:{flexColumnsEqual:!0,flexIsMultiline:!0}},WithEqualSizeFormItemsGridRow={...FormItems,name:"With equally sized grid items (row by row)",args:{layout:"grid"}},WithEqualSizeFormItemsGridCol={...FormItems,name:"With equally sized grid items (column by column)",args:{layout:"grid",gridRows:2}},WithFormItemsComplex={render:args=>({props:args,template:'\n      <cvi-ng-storybook-note>\n        <p>This story compares two layout methods, with some adaptations made for using track with form items.</p>\n        <p>In the first track CSS flex layout is used, so the last item may expand to full width in a separate row if it lacks space. Note that setting CSS variables for <code>cvi-textfield</code> component may be required.</p>\n        <p>In the second track CSS grid layout is used, so the size of all items will always be the same.</p>\n        <p>You can use controls below in "Playground" section to add more items.</p>\n      </cvi-ng-storybook-note>\n\n      <cvi-ng-track [gap]="3" layout="flex" [flexColumnsEqual]="true" [flexIsMultiline]="true" verticalAlignment="bottom" [ngStyle]="{\'--cvi-textfield--single-line--max-width\': \'100%\', \'--cvi-textfield--multiple-lines--max-width\': \'100%\'}">\n        <cvi-ng-form-item label="First track with a huge unspeakablethingamabob, field 1" htmlId="track1-someid">\n          <cvi-ng-input htmlId="track1-someid"></cvi-ng-input>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item label="First track, field 2 with more characters" htmlId="track1-someid2">\n          <cvi-ng-input htmlId="track1-someid2"></cvi-ng-input>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item [label]="\'First track, field \' + (i + 3)" [htmlId]="\'track1-someid\' + (i + 3)" *ngFor="let _ of [].constructor(repeatableItemsFlex); index as i">\n          <cvi-ng-input [htmlId]="\'track1-someid\' + (i + 3)"></cvi-ng-input>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item label="First track, last field" htmlId="track1-lastid">\n          <cvi-ng-textarea htmlId="track1-lastid"></cvi-ng-textarea>\n        </cvi-ng-form-item>\n      </cvi-ng-track>\n\n      <cvi-ng-track layout="grid" [gap]="3" verticalAlignment="bottom">\n        <cvi-ng-form-item label="Second track with a small kindofsortofatinishword, field 1" htmlId="track2-someid1">\n          <cvi-ng-input htmlId="track2-someid1"></cvi-ng-input>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item label="Second track, field 2" htmlId="track2-someid2">\n          <cvi-ng-input htmlId="track2-someid2"></cvi-ng-input>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item label="Second track, field 3" htmlId="track2-someid3">\n          <cvi-ng-input htmlId="track2-someid3"></cvi-ng-input>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item label="Second track, field 4" htmlId="track2-someid4">\n          <cvi-ng-textarea htmlId="track2-someid4"></cvi-ng-textarea>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item [label]="\'Second track, field \' + (i + 5)" [htmlId]="\'track2-someid\' + (i + 5)" *ngFor="let _ of [].constructor(repeatableItemsGrid); index as i">\n          <cvi-ng-input [htmlId]="\'track2-someid\' + (i + 5)"></cvi-ng-input>\n        </cvi-ng-form-item>\n      </cvi-ng-track>\n    '}),name:"With form items (complex layout)",parameters:{chromatic:{disableSnapshot:!0}},argTypes:{repeatableItemsFlex:{name:"Number of repeatable items (first track)",table:{category:"Playground"}},repeatableItemsGrid:{name:"Number of repeatable items (second track)",table:{category:"Playground"}}},args:{flexColumnsEqual:!0,repeatableItemsFlex:1,repeatableItemsGrid:1}},NestedTracks={render:args=>({props:args,template:'\n      <cvi-ng-storybook-note>This story is to verify a bug where a nested track  with <code>horizontalAlignment=left</code> can\'t override the same prop of an ancestor track.<br>Here, the parent track is set to <code>right</code> and nested track to <code>left</code>. The nested track therefore must not align to right for the correct behaviour.</cvi-ng-storybook-note>\n      <cvi-ng-track [gap]="gap" [horizontalAlignment]="horizontalAlignment" [verticalAlignment]="verticalAlignment" [flexDirection]="flexDirection" [flexIsMultiline]="flexIsMultiline" [layout]="layout">\n        <div>Item 1</div>\n        <cvi-ng-track [gap]="2" horizontalAlignment="left">\n          <div>Nested track with <code>horizontalAlignment="left"</code>: Item 2.1<br>And some filler easy view fifty tell string park its easier large read help ship younger rising gate hundred silk policeman dear hidden powerful table further mission</div>\n          <div>Nested track: Item 2.2</div>\n        </cvi-ng-track>\n      </cvi-ng-track>\n    '}),decorators:wrapperDecorators,args:{horizontalAlignment:"right",flexIsMultiline:!0}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: (args: TrackComponent) => ({\n    props: args,\n    /* template */\n    template: `\n      <cvi-ng-button appearance="secondary">Cancel</cvi-ng-button>\n      <cvi-ng-button>Submit</cvi-ng-button>\n    `\n  }),\n  decorators: wrapperDecorators\n}',...Default.parameters?.docs?.source}}},WithCustomGap.parameters={...WithCustomGap.parameters,docs:{...WithCustomGap.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    gap: 4\n  }\n}",...WithCustomGap.parameters?.docs?.source}}},ItemsCenteredHorizontally.parameters={...ItemsCenteredHorizontally.parameters,docs:{...ItemsCenteredHorizontally.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    horizontalAlignment: 'center'\n  }\n}",...ItemsCenteredHorizontally.parameters?.docs?.source}}},ItemsCenteredVertically.parameters={...ItemsCenteredVertically.parameters,docs:{...ItemsCenteredVertically.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    verticalAlignment: 'center'\n  }\n}",...ItemsCenteredVertically.parameters?.docs?.source}}},Vertical.parameters={...Vertical.parameters,docs:{...Vertical.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    flexDirection: 'vertical'\n  }\n}",...Vertical.parameters?.docs?.source}}},VerticalMobileOnly.parameters={...VerticalMobileOnly.parameters,docs:{...VerticalMobileOnly.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  name: 'Vertical only on mobile (desktop)',\n  args: {\n    flexDirection: 'verticalOnMobile'\n  }\n}",...VerticalMobileOnly.parameters?.docs?.source}}},VerticalMobileOnlyMobile.parameters={...VerticalMobileOnlyMobile.parameters,docs:{...VerticalMobileOnlyMobile.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  name: 'Vertical only on mobile (mobile)',\n  args: {\n    flexDirection: 'verticalOnMobile'\n  },\n  parameters: {\n    viewport: {\n      defaultViewport: 'iphone12mini'\n    }\n  }\n}",...VerticalMobileOnlyMobile.parameters?.docs?.source}}},VerticalReverseMobileOnly.parameters={...VerticalReverseMobileOnly.parameters,docs:{...VerticalReverseMobileOnly.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  name: 'Vertical reversed only on mobile (desktop)',\n  args: {\n    flexDirection: 'verticalReverseOnMobile'\n  }\n}",...VerticalReverseMobileOnly.parameters?.docs?.source}}},VerticalReverseMobileOnlyMobile.parameters={...VerticalReverseMobileOnlyMobile.parameters,docs:{...VerticalReverseMobileOnlyMobile.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  name: 'Vertical reversed only on mobile (mobile)',\n  args: {\n    flexDirection: 'verticalReverseOnMobile'\n  },\n  parameters: {\n    viewport: {\n      defaultViewport: 'iphone12mini'\n    }\n  }\n}",...VerticalReverseMobileOnlyMobile.parameters?.docs?.source}}},Multiline.parameters={...Multiline.parameters,docs:{...Multiline.parameters?.docs,source:{originalSource:"{\n  render: (args: TrackComponent) => ({\n    props: args,\n    /* template */\n    template: `\n      <cvi-ng-button>Button 1</cvi-ng-button>\n      <cvi-ng-button>Button with another label</cvi-ng-button>\n      <cvi-ng-button>Button 3</cvi-ng-button>\n      <cvi-ng-button>Button 4</cvi-ng-button>\n      <cvi-ng-button>Button the Fifth</cvi-ng-button>\n      <cvi-ng-button>Button of the Lucky Scrambler</cvi-ng-button>\n      <cvi-ng-button>Button numero Seven</cvi-ng-button>\n      <cvi-ng-button>Button 8</cvi-ng-button>\n      <cvi-ng-button>Button 9</cvi-ng-button>\n    `\n  }),\n  decorators: wrapperDecorators,\n  args: {\n    flexIsMultiline: true\n  }\n}",...Multiline.parameters?.docs?.source}}},FormItems.parameters={...FormItems.parameters,docs:{...FormItems.parameters?.docs,source:{originalSource:'{\n  render: (args: TrackComponent) => ({\n    props: args,\n    /* template */\n    template: `\n      <cvi-ng-form-item label="Some stuff 1" htmlId="someid">\n        <cvi-ng-input htmlId="someid"></cvi-ng-input>\n      </cvi-ng-form-item>\n      <cvi-ng-form-item label="Some other points to make including this 2" htmlId="someid2">\n        <cvi-ng-input htmlId="someid2"></cvi-ng-input>\n      </cvi-ng-form-item>\n      <cvi-ng-form-item label="A third field 3" htmlId="someid3">\n        <cvi-ng-input htmlId="someid3"></cvi-ng-input>\n      </cvi-ng-form-item>\n      <cvi-ng-form-item label="Another field number four" htmlId="someid4">\n        <cvi-ng-input htmlId="someid4"></cvi-ng-input>\n      </cvi-ng-form-item>\n    `\n  }),\n  decorators: wrapperDecorators,\n  name: \'With flex layout\',\n  args: {\n    flexIsMultiline: true\n  }\n}',...FormItems.parameters?.docs?.source}}},WithGridLayout.parameters={...WithGridLayout.parameters,docs:{...WithGridLayout.parameters?.docs,source:{originalSource:"{\n  ...Multiline,\n  args: {\n    layout: 'grid'\n  }\n}",...WithGridLayout.parameters?.docs?.source}}},WithEqualSizeFormItemsFlexRow.parameters={...WithEqualSizeFormItemsFlexRow.parameters,docs:{...WithEqualSizeFormItemsFlexRow.parameters?.docs,source:{originalSource:"{\n  ...FormItems,\n  name: 'With equally sized flex items',\n  args: {\n    flexColumnsEqual: true,\n    flexIsMultiline: true\n  }\n}",...WithEqualSizeFormItemsFlexRow.parameters?.docs?.source}}},WithEqualSizeFormItemsGridRow.parameters={...WithEqualSizeFormItemsGridRow.parameters,docs:{...WithEqualSizeFormItemsGridRow.parameters?.docs,source:{originalSource:"{\n  ...FormItems,\n  name: 'With equally sized grid items (row by row)',\n  args: {\n    layout: 'grid'\n  }\n}",...WithEqualSizeFormItemsGridRow.parameters?.docs?.source}}},WithEqualSizeFormItemsGridCol.parameters={...WithEqualSizeFormItemsGridCol.parameters,docs:{...WithEqualSizeFormItemsGridCol.parameters?.docs,source:{originalSource:"{\n  ...FormItems,\n  name: 'With equally sized grid items (column by column)',\n  args: {\n    layout: 'grid',\n    gridRows: 2\n  }\n}",...WithEqualSizeFormItemsGridCol.parameters?.docs?.source}}},WithFormItemsComplex.parameters={...WithFormItemsComplex.parameters,docs:{...WithFormItemsComplex.parameters?.docs,source:{originalSource:'{\n  render: (args: TrackComponent) => ({\n    props: args,\n    /* template */\n    template: `\n      <cvi-ng-storybook-note>\n        <p>This story compares two layout methods, with some adaptations made for using track with form items.</p>\n        <p>In the first track CSS flex layout is used, so the last item may expand to full width in a separate row if it lacks space. Note that setting CSS variables for <code>cvi-textfield</code> component may be required.</p>\n        <p>In the second track CSS grid layout is used, so the size of all items will always be the same.</p>\n        <p>You can use controls below in "Playground" section to add more items.</p>\n      </cvi-ng-storybook-note>\n\n      <cvi-ng-track [gap]="3" layout="flex" [flexColumnsEqual]="true" [flexIsMultiline]="true" verticalAlignment="bottom" [ngStyle]="{\'--cvi-textfield--single-line--max-width\': \'100%\', \'--cvi-textfield--multiple-lines--max-width\': \'100%\'}">\n        <cvi-ng-form-item label="First track with a huge unspeakablethingamabob, field 1" htmlId="track1-someid">\n          <cvi-ng-input htmlId="track1-someid"></cvi-ng-input>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item label="First track, field 2 with more characters" htmlId="track1-someid2">\n          <cvi-ng-input htmlId="track1-someid2"></cvi-ng-input>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item [label]="\'First track, field \' + (i + 3)" [htmlId]="\'track1-someid\' + (i + 3)" *ngFor="let _ of [].constructor(repeatableItemsFlex); index as i">\n          <cvi-ng-input [htmlId]="\'track1-someid\' + (i + 3)"></cvi-ng-input>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item label="First track, last field" htmlId="track1-lastid">\n          <cvi-ng-textarea htmlId="track1-lastid"></cvi-ng-textarea>\n        </cvi-ng-form-item>\n      </cvi-ng-track>\n\n      <cvi-ng-track layout="grid" [gap]="3" verticalAlignment="bottom">\n        <cvi-ng-form-item label="Second track with a small kindofsortofatinishword, field 1" htmlId="track2-someid1">\n          <cvi-ng-input htmlId="track2-someid1"></cvi-ng-input>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item label="Second track, field 2" htmlId="track2-someid2">\n          <cvi-ng-input htmlId="track2-someid2"></cvi-ng-input>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item label="Second track, field 3" htmlId="track2-someid3">\n          <cvi-ng-input htmlId="track2-someid3"></cvi-ng-input>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item label="Second track, field 4" htmlId="track2-someid4">\n          <cvi-ng-textarea htmlId="track2-someid4"></cvi-ng-textarea>\n        </cvi-ng-form-item>\n        <cvi-ng-form-item [label]="\'Second track, field \' + (i + 5)" [htmlId]="\'track2-someid\' + (i + 5)" *ngFor="let _ of [].constructor(repeatableItemsGrid); index as i">\n          <cvi-ng-input [htmlId]="\'track2-someid\' + (i + 5)"></cvi-ng-input>\n        </cvi-ng-form-item>\n      </cvi-ng-track>\n    `\n  }),\n  name: \'With form items (complex layout)\',\n  parameters: {\n    // Disabling Chromatic because cvi-ng-textarea triggers a visual change on every build\n    chromatic: {\n      disableSnapshot: true\n    }\n  },\n  argTypes: ({\n    repeatableItemsFlex: {\n      name: \'Number of repeatable items (first track)\',\n      table: {\n        category: \'Playground\'\n      }\n    },\n    repeatableItemsGrid: {\n      name: \'Number of repeatable items (second track)\',\n      table: {\n        category: \'Playground\'\n      }\n    }\n  } as Partial<ArgTypes<ArgsWithRepeatableFormItems>>),\n  args: ({\n    flexColumnsEqual: true,\n    repeatableItemsFlex: 1,\n    repeatableItemsGrid: 1\n  } as ArgsWithRepeatableFormItems)\n}',...WithFormItemsComplex.parameters?.docs?.source}}},NestedTracks.parameters={...NestedTracks.parameters,docs:{...NestedTracks.parameters?.docs,source:{originalSource:'{\n  render: (args: TrackComponent) => ({\n    props: args,\n    /* template */\n    template: `\n      <cvi-ng-storybook-note>This story is to verify a bug where a nested track  with <code>horizontalAlignment=left</code> can\'t override the same prop of an ancestor track.<br>Here, the parent track is set to <code>right</code> and nested track to <code>left</code>. The nested track therefore must not align to right for the correct behaviour.</cvi-ng-storybook-note>\n      <cvi-ng-track [gap]="gap" [horizontalAlignment]="horizontalAlignment" [verticalAlignment]="verticalAlignment" [flexDirection]="flexDirection" [flexIsMultiline]="flexIsMultiline" [layout]="layout">\n        <div>Item 1</div>\n        <cvi-ng-track [gap]="2" horizontalAlignment="left">\n          <div>Nested track with <code>horizontalAlignment="left"</code>: Item 2.1<br>And some filler easy view fifty tell string park its easier large read help ship younger rising gate hundred silk policeman dear hidden powerful table further mission</div>\n          <div>Nested track: Item 2.2</div>\n        </cvi-ng-track>\n      </cvi-ng-track>\n    `\n  }),\n  decorators: wrapperDecorators,\n  args: {\n    horizontalAlignment: \'right\',\n    flexIsMultiline: true\n  }\n}',...NestedTracks.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithCustomGap","ItemsCenteredHorizontally","ItemsCenteredVertically","Vertical","VerticalMobileOnly","VerticalMobileOnlyMobile","VerticalReverseMobileOnly","VerticalReverseMobileOnlyMobile","Multiline","FormItems","WithGridLayout","WithEqualSizeFormItemsFlexRow","WithEqualSizeFormItemsGridRow","WithEqualSizeFormItemsGridCol","WithFormItemsComplex","NestedTracks"]}}]);