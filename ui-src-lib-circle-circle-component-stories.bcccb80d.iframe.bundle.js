"use strict";(self.webpackChunkcvi_components=self.webpackChunkcvi_components||[]).push([[4436],{"./node_modules/rxjs/dist/esm5/internal/operators/delay.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{o:()=>delay});var scheduler_async=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/scheduler/async.js"),concat=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/concat.js"),take=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/take.js"),lift=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/lift.js"),OperatorSubscriber=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js"),noop=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/util/noop.js");var map=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/map.js");var mergeMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js"),innerFrom=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js");function delayWhen(delayDurationSelector,subscriptionDelay){return subscriptionDelay?function(source){return(0,concat.W)(subscriptionDelay.pipe((0,take.U)(1),function ignoreElements(){return(0,lift.i)((function(source,subscriber){source.subscribe((0,OperatorSubscriber.e)(subscriber,noop.K))}))}()),source.pipe(delayWhen(delayDurationSelector)))}:(0,mergeMap.O)((function(value,index){return(0,innerFrom.Uv)(delayDurationSelector(value,index)).pipe((0,take.U)(1),function mapTo(value){return(0,map.k)((function(){return value}))}(value))}))}var timer=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/timer.js");function delay(due,scheduler){void 0===scheduler&&(scheduler=scheduler_async.M);var duration=(0,timer.k)(due,scheduler);return delayWhen((function(){return duration}))}},"./libs/ui/src/lib/circle/circle.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithCustomBorderColor:()=>WithCustomBorderColor,WithIcon:()=>WithIcon,WithLightTheme:()=>WithLightTheme,WithProgress:()=>WithProgress,__namedExportsOrder:()=>__namedExportsOrder,default:()=>circle_component_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),from=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/from.js"),concatMap=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/concatMap.js"),of=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/observable/of.js"),delay=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/delay.js"),circle_component=__webpack_require__("./libs/ui/src/lib/circle/circle.component.ts");var storybook_icons=__webpack_require__("./libs/ui/src/lib/icons/storybook-icons.ts");const wrapperDecorators=[(0,dist.componentWrapperDecorator)(circle_component.o,(({args})=>args))],circle_component_stories={title:"Angular/Circle",component:circle_component.o,parameters:{docs:{description:{component:"## General description\n\n| Feature                    | Description       |\n|----------------------------|-------------------|\n| Selector                   | `cvi-ng-circle`   |\n| Component name             | `CircleComponent` |\n| Content                    | any               |\n| Permitted parent/ancestors | any               |\n| Permitted children         | -                 |\n\n## Where to use\n\nTo display a themed circle with an icon or given content. Allows adding severity and progress bar as a frame.\n\nTo overwrite the border color added by the _theme_, pass `--cvi-circle-border-color` to component's style property.\n"}},layout:"centered",backgrounds:{default:"Gray"}},argTypes:{theme:{name:"Theme",control:{type:"inline-radio"}},severity:{name:"Severity",control:{type:"inline-radio"}},size:{name:"Size",control:{type:"inline-radio"}},iconName:{name:"Icon name",options:storybook_icons.W,control:{type:"select"}},progressPercentage:{name:"Progress",control:{type:"range",min:0,max:100,step:1}},content:{name:"Content",table:{category:"Playground"}}},args:{theme:"dark",severity:"none",size:"s",iconName:void 0,progressPercentage:void 0,content:"4"}},Default={render:args=>({props:args,template:"{{ content }}"}),decorators:wrapperDecorators},WithLightTheme={...Default,parameters:{backgrounds:{default:"Dark"}},args:{theme:"light"}},WithIcon={...Default,args:{iconName:"close"}},WithProgress={render:args=>({props:{...args,progress$:(0,from.Q)([20,40,60,80,100]).pipe((0,concatMap.m)((item=>(0,of.of)(item).pipe((0,delay.o)(800)))))},template:'\n      <ng-container *ngIf="(progress$ | async) as progress">\n        <cvi-ng-circle\n          [theme]="theme"\n          [severity]="severity"\n          [size]="size"\n          [iconName]="iconName"\n          [progressPercentage]="progress"\n        >{{ progress }}</cvi-ng-circle>\n      </ng-container>\n    '})},WithCustomBorderColor={render:args=>({props:args,template:'\n      <cvi-ng-circle\n        [theme]="theme"\n        [severity]="severity"\n        [size]="size"\n        [iconName]="iconName"\n        [progressPercentage]="progressPercentage"\n        style="--cvi-circle-border-color: --cvi-color-sea-green-10"\n      >4</cvi-ng-circle>\n    '}),args:{theme:"light",severity:"success"}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args: CircleComponent) => ({\n    props: args,\n    template: `{{ content }}`\n  }),\n  decorators: wrapperDecorators\n}",...Default.parameters?.docs?.source}}},WithLightTheme.parameters={...WithLightTheme.parameters,docs:{...WithLightTheme.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  parameters: {\n    backgrounds: {\n      default: 'Dark'\n    }\n  },\n  args: {\n    theme: 'light'\n  }\n}",...WithLightTheme.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    iconName: 'close'\n  }\n}",...WithIcon.parameters?.docs?.source}}},WithProgress.parameters={...WithProgress.parameters,docs:{...WithProgress.parameters?.docs,source:{originalSource:'{\n  render: (args: CircleComponent) => ({\n    props: {\n      ...args,\n      progress$: from([20, 40, 60, 80, 100]).pipe(concatMap(item => of(item).pipe(delay(800))))\n    },\n    template: `\n      <ng-container *ngIf="(progress$ | async) as progress">\n        <cvi-ng-circle\n          [theme]="theme"\n          [severity]="severity"\n          [size]="size"\n          [iconName]="iconName"\n          [progressPercentage]="progress"\n        >{{ progress }}</cvi-ng-circle>\n      </ng-container>\n    `\n  })\n}',...WithProgress.parameters?.docs?.source}}},WithCustomBorderColor.parameters={...WithCustomBorderColor.parameters,docs:{...WithCustomBorderColor.parameters?.docs,source:{originalSource:'{\n  render: (args: CircleComponent) => ({\n    props: args,\n    template: `\n      <cvi-ng-circle\n        [theme]="theme"\n        [severity]="severity"\n        [size]="size"\n        [iconName]="iconName"\n        [progressPercentage]="progressPercentage"\n        style="--cvi-circle-border-color: --cvi-color-sea-green-10"\n      >4</cvi-ng-circle>\n    `\n  }),\n  args: {\n    theme: \'light\',\n    severity: \'success\'\n  }\n}',...WithCustomBorderColor.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithLightTheme","WithIcon","WithProgress","WithCustomBorderColor"]}}]);