"use strict";(self.webpackChunkcvi_components=self.webpackChunkcvi_components||[]).push([[5576],{"./libs/ui/src/lib/icons/labeled-icon/labeled-icon.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,LabeledIconInsideButton:()=>LabeledIconInsideButton,WithCustomGap:()=>WithCustomGap,WithCustomStyling:()=>WithCustomStyling,WithIconAfter:()=>WithIconAfter,__namedExportsOrder:()=>__namedExportsOrder,default:()=>labeled_icon_component_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),icon=__webpack_require__("./libs/ui/src/lib/icons/icon/icon.ts"),labeled_icon_component=__webpack_require__("./libs/ui/src/lib/icons/labeled-icon/labeled-icon.component.ts");var storybook_icons=__webpack_require__("./libs/ui/src/lib/icons/storybook-icons.ts");const wrapperDecorators=[(0,dist.componentWrapperDecorator)(labeled_icon_component.G,(({args})=>args))],labeled_icon_component_stories={title:"Angular/Labeled icon",component:labeled_icon_component.G,parameters:{docs:{description:{component:"## General description\n\n| Feature                    | Description            |\n|----------------------------|------------------------|\n| Selector                   | `cvi-ng-labeled-icon`  |\n| Component name             | `LabeledIconComponent` |\n| Content                    | yes                    |\n| Permitted parent/ancestors | any                    |\n| Permitted children         | Phrasing content       |\n\n## Where to use\n\nDisplays a regular svg icon that can optionally be followed by an html element.\n"}}},argTypes:{name:{name:"Icon name",options:storybook_icons.W,control:{type:"select"}},content:{name:"Content",table:{category:"Playground"},control:{type:"text"}},gap:{name:"Gap",control:{type:"range",min:0,max:20,step:1}},svgClass:{control:!1},iconClass:{control:!1}},args:{iconHeight:icon.c,name:"call",gap:4,iconPosition:"before",content:"This is a labeled icon"}},Default={render:args=>({props:args,template:"{{ content }}"}),decorators:wrapperDecorators},WithIconAfter={...Default,args:{iconPosition:"after"}},WithCustomGap={...Default,args:{gap:2}},LabeledIconInsideButton={...Default,args:{iconPosition:"after",verticalAlignment:"center"},decorators:[...wrapperDecorators,(0,dist.componentWrapperDecorator)((story=>`\n        <cvi-ng-button appearance="secondary">\n          ${story}\n        </cvi-ng-button>\n      `))]},WithCustomStyling={render:args=>({props:args,template:"{{ content }}",styles:["\n        ::ng-deep .icon-wrapper-class {\n          border: 1px green solid;\n        }\n      ","\n        ::ng-deep .svg-class {\n          fill: red;\n        }\n      "]}),decorators:wrapperDecorators,args:{iconHeight:40,verticalAlignment:"center",iconClass:"icon-wrapper-class",svgClass:"svg-class"}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args: LabeledIconComponent) => ({\n    props: args,\n    template: `{{ content }}`\n  }),\n  decorators: wrapperDecorators\n}",...Default.parameters?.docs?.source}}},WithIconAfter.parameters={...WithIconAfter.parameters,docs:{...WithIconAfter.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    iconPosition: 'after'\n  }\n}",...WithIconAfter.parameters?.docs?.source}}},WithCustomGap.parameters={...WithCustomGap.parameters,docs:{...WithCustomGap.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    gap: 2\n  }\n}",...WithCustomGap.parameters?.docs?.source}}},LabeledIconInsideButton.parameters={...LabeledIconInsideButton.parameters,docs:{...LabeledIconInsideButton.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    iconPosition: 'after',\n    verticalAlignment: 'center'\n  },\n  decorators: [...wrapperDecorators, componentWrapperDecorator(story => {\n    return `\n        <cvi-ng-button appearance=\"secondary\">\n          ${story}\n        </cvi-ng-button>\n      `;\n  })]\n}",...LabeledIconInsideButton.parameters?.docs?.source}}},WithCustomStyling.parameters={...WithCustomStyling.parameters,docs:{...WithCustomStyling.parameters?.docs,source:{originalSource:"{\n  render: (args: LabeledIconComponent) => ({\n    props: args,\n    template: `{{ content }}`,\n    styles: [\n    // in your app you don't need to use ::ng-deep\n    `\n        ::ng-deep .icon-wrapper-class {\n          border: 1px green solid;\n        }\n      `, `\n        ::ng-deep .svg-class {\n          fill: red;\n        }\n      `]\n  }),\n  decorators: wrapperDecorators,\n  args: {\n    iconHeight: 40,\n    verticalAlignment: 'center',\n    iconClass: 'icon-wrapper-class',\n    svgClass: 'svg-class'\n  }\n}",...WithCustomStyling.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithIconAfter","WithCustomGap","LabeledIconInsideButton","WithCustomStyling"]}}]);