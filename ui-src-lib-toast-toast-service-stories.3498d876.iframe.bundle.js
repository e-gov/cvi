"use strict";(self.webpackChunkcvi_components=self.webpackChunkcvi_components||[]).push([[2224],{"./libs/ui/src/lib/toast/toast.service.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,OpenOnLoad:()=>OpenOnLoad,__namedExportsOrder:()=>__namedExportsOrder,default:()=>toast_service_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),toast_service=__webpack_require__("./libs/ui/src/lib/toast/toast.service.ts");let ToastWrapperComponent=class ToastWrapperComponent{constructor(toastService){this.toastService=toastService,this.showButtons=!0}ngAfterViewInit(){this.showButtons||this.toastService.info("Default Title which is quite darn long","Default message. Long unbreakable string: 6516949e9bbc0e07ddbaa7283d558cf1")}openSuccessToast(){this.toastService.success("Success Title with a lot of text that does not fit","Message")}openInfoToast(){this.toastService.info("Info Title","Message")}openWarningToast(){this.toastService.warning("Warning Title","Message")}openErrorToast(){this.toastService.error("Error Title","Message. Long unbreakable string: 6516949e9bbc0e07ddbaa7283d558cf1")}static#_=this.ctorParameters=()=>[{type:toast_service.s}];static#_2=this.propDecorators={showButtons:[{type:core.Input}]}};ToastWrapperComponent=(0,tslib_es6.UN)([(0,core.Component)({selector:"cvi-ng-storybook-toast-wrapper",template:'\n    <cvi-ng-track [gap]="4" *ngIf="showButtons">\n      <cvi-ng-button\n        (click)="openSuccessToast()"\n        dataAttribute="test-success-toast-button"\n        >Open Success Toast</cvi-ng-button\n      >\n      <cvi-ng-button (click)="openInfoToast()">Open Info Toast</cvi-ng-button>\n      <cvi-ng-button (click)="openWarningToast()"\n        >Open Warning Toast</cvi-ng-button\n      >\n      <cvi-ng-button (click)="openErrorToast()">Open Error Toast</cvi-ng-button>\n    </cvi-ng-track>\n  '}),(0,tslib_es6.YR)("design:paramtypes",[toast_service.s])],ToastWrapperComponent);const toast_service_stories={title:"Angular/Toast",component:ToastWrapperComponent,parameters:{docs:{description:{component:"## General description\n\n`ToastService` is an injectable service and can be used to show success, info, warning\nand error toasts.\n\n## Where to use\n\nCan be used everywhere you need to show toasts. \nJust inject the ToastService into your component or service and\ncall the adequate method to show toasts on the top right side of the screen.\n"}}},decorators:[(0,dist.moduleMetadata)({declarations:[ToastWrapperComponent],providers:[toast_service.s]})],argTypes:{showButtons:{table:{disable:!0}}}},Default={},OpenOnLoad={render:args=>({props:args,template:'\n      <cvi-ng-storybook-toast-wrapper [showButtons]="false"></cvi-ng-storybook-toast-wrapper>\n    '}),parameters:{chromatic:{delay:1e3}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},OpenOnLoad.parameters={...OpenOnLoad.parameters,docs:{...OpenOnLoad.parameters?.docs,source:{originalSource:'{\n  render: (args: ToastWrapperComponent) => ({\n    props: args,\n    template: `\n      <cvi-ng-storybook-toast-wrapper [showButtons]="false"></cvi-ng-storybook-toast-wrapper>\n    `\n  }),\n  parameters: {\n    chromatic: {\n      delay: 1000\n    }\n  }\n}',...OpenOnLoad.parameters?.docs?.source}}};const __namedExportsOrder=["Default","OpenOnLoad"]}}]);