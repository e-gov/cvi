"use strict";(self.webpackChunkcvi_components=self.webpackChunkcvi_components||[]).push([[1932],{"./libs/ui/src/lib/button/button.html.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Secondary:()=>Secondary,Small:()=>Small,Text:()=>Text,TextWithoutUnderline:()=>TextWithoutUnderline,WithCustomColor:()=>WithCustomColor,__namedExportsOrder:()=>__namedExportsOrder,default:()=>button_html_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs");var button_button=__webpack_require__("./libs/ui/src/lib/button/button.ts");const button_html_stories={title:"HTML/Button",parameters:{docs:{description:{component:"## General description\n\nFeature | Description\n- | -\nSass component | `cvi-button`\nCorresponding Javascript component | `ButtonComponent`\nPermitted parent/ancestors | any\nPermitted Sass components as children | Phrasing content\n\n## Where to use\n\nStyled button.\n\n## How to use\n\nAdd directly to HTML using `.cvi-button*` classes or `@include` mixin `@cvi-button` in your Sass code. When including the mixin, you can change the base class with `$base` parameter.\n\nYou can use `--cvi-button-color` and `--cvi-button-color--hover` CSS variables to customise the background color of the button with `--appearance-primary` modifier class.\n"}},options:{selectedPanel:"storybook/html/panel"}},argTypes:{appearance:{name:"Appearance",options:[button_button.u.PRIMARY,button_button.u.SECONDARY,button_button.u.TEXT],control:{type:"inline-radio"}},size:{name:"Size",options:[button_button.o.M,button_button.o.S],control:{type:"inline-radio"}}},args:{content:"Button label",appearance:button_button.u.PRIMARY,size:button_button.o.M,disabled:!1}},Default={render:args=>({props:args,template:'\n      <div class="cvi-button cvi-button--appearance-{{ appearance }} cvi-button--size-{{ size }}">\n        <button type="button" class="cvi-button__button" disabled="{{ disabled ? true : null }}">{{ content }}</button>\n      </div>\n    '})},Secondary={...Default,args:{appearance:button_button.u.SECONDARY}},Small={...Default,args:{size:button_button.o.S}},Text={...Default,args:{appearance:button_button.u.TEXT}},WithCustomColor={render:args=>({props:args,template:'\n      <div class="cvi-button cvi-button--appearance-{{ appearance }} cvi-button--size-{{ size }}" style="--cvi-button-color: var(--cvi-color-jasper-10); --cvi-button-color--hover: var(--cvi-color-jasper-12);">\n        <button type="button" class="cvi-button__button" disabled="{{ disabled ? true : null }}">{{ content }}</button>\n      </div>\n    '})},TextWithoutUnderline={args:{appearance:button_button.u.TEXT},render:args=>({props:args,styles:[":host {\n        --cvi-button--text-decoration: none;\n      }"],template:'\n      <div class="cvi-button cvi-button--appearance-{{ appearance }} cvi-button--size-{{ size }}">\n        <button type="button" class="cvi-button__button" disabled="{{ disabled ? true : null }}">{{ content }}</button>\n      </div>\n    '}),decorators:[(0,dist.componentWrapperDecorator)((story=>`\n        <cvi-ng-storybook-note>\n          Define <code>--cvi-button--text-decoration: none</code> CSS variable on the element or its ancestor to remove the underline.\n        </cvi-ng-storybook-note>\n        ${story}\n      `))]};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: (args: unknown) => ({\n    props: args,\n    /* template */\n    template: `\n      <div class="cvi-button cvi-button--appearance-{{ appearance }} cvi-button--size-{{ size }}">\n        <button type="button" class="cvi-button__button" disabled="{{ disabled ? true : null }}">{{ content }}</button>\n      </div>\n    `\n  })\n}',...Default.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    appearance: ButtonAppearance.SECONDARY\n  }\n}",...Secondary.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    size: ButtonSize.S\n  }\n}",...Small.parameters?.docs?.source}}},Text.parameters={...Text.parameters,docs:{...Text.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    appearance: ButtonAppearance.TEXT\n  }\n}",...Text.parameters?.docs?.source}}},WithCustomColor.parameters={...WithCustomColor.parameters,docs:{...WithCustomColor.parameters?.docs,source:{originalSource:'{\n  render: (args: unknown) => ({\n    props: args,\n    /* template */\n    template: `\n      <div class="cvi-button cvi-button--appearance-{{ appearance }} cvi-button--size-{{ size }}" style="--cvi-button-color: var(--cvi-color-jasper-10); --cvi-button-color--hover: var(--cvi-color-jasper-12);">\n        <button type="button" class="cvi-button__button" disabled="{{ disabled ? true : null }}">{{ content }}</button>\n      </div>\n    `\n  })\n}',...WithCustomColor.parameters?.docs?.source}}},TextWithoutUnderline.parameters={...TextWithoutUnderline.parameters,docs:{...TextWithoutUnderline.parameters?.docs,source:{originalSource:'{\n  args: {\n    appearance: ButtonAppearance.TEXT\n  },\n  render: (args: unknown) => ({\n    props: args,\n    styles: [`:host {\n        --cvi-button--text-decoration: none;\n      }`],\n    template: `\n      <div class="cvi-button cvi-button--appearance-{{ appearance }} cvi-button--size-{{ size }}">\n        <button type="button" class="cvi-button__button" disabled="{{ disabled ? true : null }}">{{ content }}</button>\n      </div>\n    `\n  }),\n  decorators: [componentWrapperDecorator(story => {\n    return `\n        <cvi-ng-storybook-note>\n          Define <code>--cvi-button--text-decoration: none</code> CSS variable on the element or its ancestor to remove the underline.\n        </cvi-ng-storybook-note>\n        ${story}\n      `;\n  })]\n}',...TextWithoutUnderline.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Secondary","Small","Text","WithCustomColor","TextWithoutUnderline"]}}]);