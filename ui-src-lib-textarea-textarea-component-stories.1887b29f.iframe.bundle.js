"use strict";(self.webpackChunkcvi_components=self.webpackChunkcvi_components||[]).push([[6003],{"./libs/ui/src/lib/textarea/textarea.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithCharacterCounter:()=>WithCharacterCounter,WithFormGroup:()=>WithFormGroup,__namedExportsOrder:()=>__namedExportsOrder,default:()=>textarea_component_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs");const textarea_component_stories={title:"Angular/Form/Textarea",component:__webpack_require__("./libs/ui/src/lib/textarea/textarea.component.ts").a,parameters:{docs:{description:{component:"## General description\n\nFeature | Description\n- | -\nSelector | `cvi-ng-textarea`\nComponent name | `TextareaComponent`\nDesign system module | -\nPermitted parent/ancestors | any\nPermitted children | -\n\n## Where to use\n\nA textarea input field component.\n\nCan be used with character counter directive `cviNgCharacterCounter`. If set, character counter uses binded `[maxChars]` property for defining maximum value, otherwise it takes the maximum value from `maxlength` attribute of the native HTML element. If neither is set, character counter is not displayed. Sets the `maxlength` value accordingly.\n"}},chromatic:{disableSnapshot:!0}},decorators:[(0,dist.moduleMetadata)({imports:[fesm2022_forms.sl]})],args:{placeholder:"Placeholder",disabled:!1,resizable:!0,maxLength:2e3,minRows:3,htmlId:"some-textarea",onChanged:()=>{},onTouched:()=>{}}},Default={decorators:[(0,dist.componentWrapperDecorator)((story=>`\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId">\n          ${story}\n        </cvi-ng-form-item>\n      `))]},WithCharacterCounter={render:args=>({props:args,template:'\n      <cvi-ng-form-item label="Some label" [htmlId]="htmlId">\n        <cvi-ng-textarea cviNgCharacterCounter [maxChars]="30" [resizable]="resizable" [htmlId]="htmlId"></cvi-ng-textarea>\n      </cvi-ng-form-item>\n    '})},WithFormGroup={render:args=>{const form=new fesm2022_forms.WC({item:new fesm2022_forms.Ku("initial value")});return{props:{placeholder:args.placeholder,disabled:args.disabled,maxLength:args.maxLength,maxRows:args.maxRows,htmlId:args.htmlId,resizable:args.resizable,minRows:3,form,selectedValue:function selectedValue(){return form.controls.item.value}},template:'\n      <div [formGroup]="form">\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId">\n          <cvi-ng-textarea formControlName="item"\n                          [placeholder]="placeholder"\n                          [disabled]="disabled"\n                          [maxLength]="maxLength"\n                          [minRows]="minRows"\n                          [maxRows]="maxRows"\n                          [htmlId]="htmlId"\n                          [resizable]="resizable">\n          </cvi-ng-textarea>\n        </cvi-ng-form-item>\n        <div>Inserted value: {{selectedValue()}}</div>\n      </div>\n    '}},name:"With FormGroup"};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  decorators: [componentWrapperDecorator(story => {\n    return `\n        <cvi-ng-form-item label="Some label" [htmlId]="htmlId">\n          ${story}\n        </cvi-ng-form-item>\n      `;\n  })]\n}',...Default.parameters?.docs?.source}}},WithCharacterCounter.parameters={...WithCharacterCounter.parameters,docs:{...WithCharacterCounter.parameters?.docs,source:{originalSource:'{\n  render: (args: TextareaComponent) => ({\n    props: args,\n    /* template */\n    template: `\n      <cvi-ng-form-item label="Some label" [htmlId]="htmlId">\n        <cvi-ng-textarea cviNgCharacterCounter [maxChars]="30" [resizable]="resizable" [htmlId]="htmlId"></cvi-ng-textarea>\n      </cvi-ng-form-item>\n    `\n  })\n}',...WithCharacterCounter.parameters?.docs?.source}}},WithFormGroup.parameters={...WithFormGroup.parameters,docs:{...WithFormGroup.parameters?.docs,source:{originalSource:"{\n  render: FormGroupTemplate,\n  name: 'With FormGroup'\n}",...WithFormGroup.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithCharacterCounter","WithFormGroup"]}}]);