"use strict";(self.webpackChunkcvi_components=self.webpackChunkcvi_components||[]).push([[620],{"./libs/ui/src/lib/modal/modal.directive.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,ModalOpen:()=>ModalOpen,ModalOpenWithoutButton:()=>ModalOpenWithoutButton,WithoutTitle:()=>WithoutTitle,__namedExportsOrder:()=>__namedExportsOrder,default:()=>modal_directive_stories});const modal_directive_stories={title:"Angular/Modal/Modal directive",parameters:{docs:{description:{component:"## General description\n\n| Feature                    | Description      |\n|----------------------------|------------------|\n| Selector                   | `cviNgModal`   |\n| Directive name             | `ModalDirective` |\n| Permitted parent/ancestors | any              |\n\n## Where to use\n\nWhen directive is applied to HTML element then clicking on element displays modal overlay.\n"}}},argTypes:{modalOpen:{table:{disable:!0}}},args:{modalTitle:"Hey, I am Modal, how are you?",modalOpen:!1,closeable:!0}},Default={render:args=>({props:args,template:'\n      <ng-template #modal let-testModalTitle="title">\n        <h2 *ngIf="testModalTitle">{{ testModalTitle }}</h2>\n        <p>Modal content</p>\n      </ng-template>\n      <cvi-ng-button [cviNgModal]="modal" [modalTitle]="modalTitle" [open]="modalOpen" [closeable]="closeable">Open modal</cvi-ng-button>\n    '})},ModalOpen={...Default,args:{modalOpen:!0}},WithoutTitle={...Default,args:{modalTitle:""},parameters:{axe:{disabledRules:["aria-dialog-name"]}}},ModalOpenWithoutButton={render:args=>({props:args,template:'\n      <ng-template #modal>\n        <p>Modal content</p>\n      </ng-template>\n      <ng-container [cviNgModal]="modal" [open]="true" [closeable]="closeable"></ng-container>\n    '}),parameters:{axe:{disabledRules:["aria-dialog-name"]}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: (args: unknown) => ({\n    props: args,\n    /* template */\n    template: `\n      <ng-template #modal let-testModalTitle="title">\n        <h2 *ngIf="testModalTitle">{{ testModalTitle }}</h2>\n        <p>Modal content</p>\n      </ng-template>\n      <cvi-ng-button [cviNgModal]="modal" [modalTitle]="modalTitle" [open]="modalOpen" [closeable]="closeable">Open modal</cvi-ng-button>\n    `\n  })\n}',...Default.parameters?.docs?.source}}},ModalOpen.parameters={...ModalOpen.parameters,docs:{...ModalOpen.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    modalOpen: true\n  }\n}",...ModalOpen.parameters?.docs?.source}}},WithoutTitle.parameters={...WithoutTitle.parameters,docs:{...WithoutTitle.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    modalTitle: ''\n  },\n  parameters: {\n    axe: {\n      disabledRules: ['aria-dialog-name']\n    }\n  }\n}",...WithoutTitle.parameters?.docs?.source}}},ModalOpenWithoutButton.parameters={...ModalOpenWithoutButton.parameters,docs:{...ModalOpenWithoutButton.parameters?.docs,source:{originalSource:'{\n  render: (args: unknown) => ({\n    props: args,\n    /* template */\n    template: `\n      <ng-template #modal>\n        <p>Modal content</p>\n      </ng-template>\n      <ng-container [cviNgModal]="modal" [open]="true" [closeable]="closeable"></ng-container>\n    `\n  }),\n  parameters: {\n    axe: {\n      disabledRules: [\'aria-dialog-name\']\n    }\n  }\n}',...ModalOpenWithoutButton.parameters?.docs?.source}}};const __namedExportsOrder=["Default","ModalOpen","WithoutTitle","ModalOpenWithoutButton"]}}]);