"use strict";(self.webpackChunkcvi_components=self.webpackChunkcvi_components||[]).push([[8076],{"./libs/ui/src/lib/radio-button/radio-group/radio-group.html.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithCompactOptionButtons:()=>WithCompactOptionButtons,WithOptionButtons:()=>WithOptionButtons,__namedExportsOrder:()=>__namedExportsOrder,default:()=>radio_group_html_stories});const radio_group_html_stories={title:"HTML/Form/Radio button group",parameters:{docs:{description:{component:"## General description\n\nFeature | Description\n- | -\nSass component | `cvi-radio-group`\nCorresponding Javascript component | `RadioGroupComponent`\nDesign system module | -\nPermitted parent/ancestors | any\nPermitted Sass components as children | -\n\n## Where to use\n\nA wrapper for radios that look like regular buttons.\n\n## How to use\n\nAdd directly to HTML using `.cvi-radio-group*` classes or `@include` mixin `@cvi-radio-group` in your Sass code. When including the mixin, you can change the base class with `$base` parameter.\n"}},options:{selectedPanel:"storybook/html/panel"}},argTypes:{appearance:{name:"Appearance",options:["regular","compact"],control:{type:"inline-radio"}}},args:{title:"Example title",appearance:"regular",label:"Option 1"}},Default={render:args=>({props:args,template:'\n      <div class="cvi-radio-group">\n        <fieldset class="cvi-radio-group__inner">\n          <legend class="cvi-radio-group__title">{{ title }}</legend>\n          <ul class="cvi-radio-group__list">\n            <li class="cvi-radio-group__item">\n              <label class="cvi-radio-group__item-inner">\n                <input name="name" value="value_1" class="cvi-radio-group__item-control" type="radio">\n                <span>{{ label }}</span>\n              </label>\n            </li>\n            <li class="cvi-radio-group__item">\n              <label class="cvi-radio-group__item-inner">\n                <input name="name" value="value_2" class="cvi-radio-group__item-control" type="radio">\n                  <span>Option 2</span>\n              </label>\n            </li>\n          </ul>\n        </fieldset>\n      </div>\n    '}),args:{title:"Default radio buttons example"}},WithOptionButtons={render:args=>({props:args,template:'\n      <div class="cvi-radio-group cvi-radio-group--appearance-{{ appearance }}">\n        <fieldset class="cvi-radio-group__inner">\n          <legend class="cvi-radio-group__title">{{ title }}</legend>\n          <ul class="cvi-radio-group__list">\n            <li class="cvi-radio-group__item">\n              <label class="cvi-radio-group__item-inner">\n                <input type="radio" class="cvi-radio-group__input" name="example-name" value="value_1" />\n                <span class="cvi-radio-group__button">{{ label }}</span>\n              </label>\n            </li>\n            <li class="cvi-radio-group__item">\n              <label class="cvi-radio-group__item-inner">\n                <input type="radio" class="cvi-radio-group__input" name="example-name" value="value_2" />\n                <span class="cvi-radio-group__button">\n                  Option 2\n                </span>\n              </label>\n            </li>\n          </ul>\n        </fieldset>\n      </div>\n    '}),args:{title:"Radio buttons with labels that look like buttons",appearance:"regular"}},WithCompactOptionButtons={...WithOptionButtons,args:{title:"Radio buttons with labels that look like compact buttons",appearance:"compact"}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: (args: unknown) => ({\n    props: args,\n    /* template */\n    template: `\n      <div class="cvi-radio-group">\n        <fieldset class="cvi-radio-group__inner">\n          <legend class="cvi-radio-group__title">{{ title }}</legend>\n          <ul class="cvi-radio-group__list">\n            <li class="cvi-radio-group__item">\n              <label class="cvi-radio-group__item-inner">\n                <input name="name" value="value_1" class="cvi-radio-group__item-control" type="radio">\n                <span>{{ label }}</span>\n              </label>\n            </li>\n            <li class="cvi-radio-group__item">\n              <label class="cvi-radio-group__item-inner">\n                <input name="name" value="value_2" class="cvi-radio-group__item-control" type="radio">\n                  <span>Option 2</span>\n              </label>\n            </li>\n          </ul>\n        </fieldset>\n      </div>\n    `\n  }),\n  args: {\n    title: \'Default radio buttons example\'\n  }\n}',...Default.parameters?.docs?.source}}},WithOptionButtons.parameters={...WithOptionButtons.parameters,docs:{...WithOptionButtons.parameters?.docs,source:{originalSource:'{\n  render: (args: unknown) => ({\n    props: args,\n    /* template */\n    template: `\n      <div class="cvi-radio-group cvi-radio-group--appearance-{{ appearance }}">\n        <fieldset class="cvi-radio-group__inner">\n          <legend class="cvi-radio-group__title">{{ title }}</legend>\n          <ul class="cvi-radio-group__list">\n            <li class="cvi-radio-group__item">\n              <label class="cvi-radio-group__item-inner">\n                <input type="radio" class="cvi-radio-group__input" name="example-name" value="value_1" />\n                <span class="cvi-radio-group__button">{{ label }}</span>\n              </label>\n            </li>\n            <li class="cvi-radio-group__item">\n              <label class="cvi-radio-group__item-inner">\n                <input type="radio" class="cvi-radio-group__input" name="example-name" value="value_2" />\n                <span class="cvi-radio-group__button">\n                  Option 2\n                </span>\n              </label>\n            </li>\n          </ul>\n        </fieldset>\n      </div>\n    `\n  }),\n  args: {\n    title: \'Radio buttons with labels that look like buttons\',\n    appearance: \'regular\'\n  }\n}',...WithOptionButtons.parameters?.docs?.source}}},WithCompactOptionButtons.parameters={...WithCompactOptionButtons.parameters,docs:{...WithCompactOptionButtons.parameters?.docs,source:{originalSource:"{\n  ...WithOptionButtons,\n  args: {\n    title: 'Radio buttons with labels that look like compact buttons',\n    appearance: 'compact'\n  }\n}",...WithCompactOptionButtons.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithOptionButtons","WithCompactOptionButtons"]}}]);